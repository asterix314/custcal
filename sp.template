/***************************************************
    业务类型:	`业务类型`
    业务摘要:	`业务摘要`


    本存储过程由以下会计分录自动生成：

`会计分录`
*/

if exists (select * from sysobjects where type = 'P' and name = 'sp_`业务摘要`')
	drop procedure sp_`业务摘要`
go

create procedure sp_`业务摘要`(
	@bizdate int,  
	@msg varchar(128) = null output)
as
begin try
	begin transaction

	-- 更新持仓核算表
	merge into `持仓核算` as sec
	using (
		select serverid, orgid, custid, fundid, market, stkcode, `流通类型` as ltlx, moneytype, bankcode,
		       matchqty, matchamt, fee_jsxf, fee_sxf, fee_ghf, fee_yhs, feefront
		from `业务流水`
		where digestid = `业务摘要` and bizdate = @bizdate
	) as ord
	on (
		sec.serverid = ord.serverid and
		sec.orgid = ord.orgid and
		sec.custid = ord.custid and
		sec.fundid = ord.fundid and
		sec.market = ord.market and
		sec.ltlx = ord.ltlx and		-- todo: some don't need specific ltlx
		sec.stkcode = ord.stkcode)
	when matched then
		update set `持仓核算更新`
	when not matched then
		insert (serverid, orgid, custid, fundid, market, stkcode, ltlx`持仓核算字段`)  
		values (ord.serverid, ord.orgid, ord.custid, ord.fundid, ord.market, ord.stkcode, ord.ltlx`持仓核算发生额`);
		
	-- 更新资金核算表
	merge into `资金核算` as fun
	using (
		select serverid, orgid, custid, bankcode, fundid, moneytype, matchamt, fee_jsxf, fee_sxf, fee_ghf, fee_yhs, feefront
		from `业务流水`
		where digestid = `业务摘要` and bizdate = @bizdate
	) as ord
	on (
		fun.serverid = ord.serverid and
		fun.orgid = ord.orgid and
		fun.custid = ord.custid and
		fun.bankcode = ord.bankcode and
		fun.fundid = ord.fundid and
		fun.moneytype = ord.moneytype)
	when matched then
		update set `资金核算更新`
	when not matched then
		insert (serverid, orgid, custid, bankcode, fundid, moneytype`资金核算字段`)  
		values (ord.serverid, ord.orgid, ord.custid, ord.bankcode, ord.fundid, ord.moneytype`资金核算发生额`);


	-- 更新各统计变量

	update `持仓核算` set
	lxjt_ch = aiamount_ch - aicost_ch,		-- 利息计提 = 预计利息 - 利息成本
	bondintr = aiamount / stkqty,			-- 债券票面利息 = 预计利息 / 库存数量
	-- 市值金额     | 市场价格 * 库存数量
	-- 总计费用     | 净手续费 + 印花税费 + 过户费用 + 利息税费 + 其它费用

	-- 净资产       | 总市值 + 本日余额 + 借出金额 + 预计利息 + 在途未收 + 利息积数  - 借入金额 - 在途未付
	
	where digestid = `业务摘要` and bizdate = @bizdate


	-- 更新各累计变量
	
	update `持仓核算` set
	stkqty = stkqty + stkqty_ch,	-- 库存数量（累计）
	stkcost = stkcost + stkcost_ch,	-- 库存成本（累计）
	gyvalue = gyvalue + gyvalue_ch,	-- 浮动盈亏（累计）
	syvalue = syvalue + syvalue_ch,	-- 交易收益 （累计）
	lxsr = lxsr + lxsr_ch,		-- 利息收入（累计）
	rzlx = rzlx + rzlx_ch, 		-- 融资利息（累计）
	rqlx = rqlx + rqlx_ch,		-- 融券利息（累计）
	hglx = hglx + hglx_ch,		-- 回购利息（累计）
	fee = fee + fee_ch,		-- 总费用（累计）
	jsxf = jsxf + jsxf_ch,		-- 净手续费（累计）
	yhs = yhs + yhs_ch,		-- 印花税（累计）
	ghf = ghf + ghf_ch,		-- 过户费（累计）
	lxs = lxs + lxs_ch,		-- 利息税（累计）
	qtfee = qtfee + qtfee_ch,	-- 其它费（累计）
	aicost = aicost + aicost_ch,	-- 利息成本（累计）
	lxjt = lxjt + lxjt_ch		-- 利息计提（累计）
	where bizdate = @bizdate

	update `资金核算` set
	fundbal = fundbal + fundbal_ch,			-- 账户资金（累计）
	fundunsave = fundunsave + fundunsave_ch,	-- 取款金额（累计）
	fundsave = fundsave + fundsave_ch,		-- 存款金额（累计）
	fundloan = fundloan + fundloan_ch,		-- 借出金额（累计）
	funddebt = funddebt + funddebt_ch,		-- 借入金额（累计）
	funduncome = funduncome + funduncome_ch,	-- 在途未收（累计）
	fundunpay = fundunpay + fundunpay_ch,		-- 在途未付（累计）
	fundintr = fundintr + fundintr_ch		-- 利息积数（累计）
	fundaward = fundaward + fundaward_ch		-- 累计结息（累计）
	where tjdate = @bizdate


	select @msg='核算处理成功'

	update logasset_hs set sett_status = 3, sett_remark = @msg
	where  bizdate = @bizdate and digestid = `业务摘要` and bizdate = @bizdate

	commit transaction
	return 0
end try

begin catch
	if @@trancount > 0
		rollback transaction
	
	return -1
end catch

go

-------------

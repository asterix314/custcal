/****************************************
    存储过程：    `存储过程`
    业务描述：    `业务名称`（`业务摘要`）
*****************************************/

if exists (select * from sysobjects where type='P' and name='`存储过程`')
    drop proc `存储过程`
go
/*
select * from `业务流水` where bizdate<20150106
select * from `业务流水` where sno=251110 and bizdate=20150130
select * from `业务流水` where sno=278249 and bizdate=20150105
select * from `业务流水` where custid=129500065129 and bizdate=20150105 and digestid=`业务摘要`
declare @msg as varchar(128)
exec `存储过程` @serverid=1, @bizdate=20150105, @sno=148741, @custid=129500065129, @msg=@msg output
select @msg

select * from `业务流水` where custid=129500065129 and bizdate=20150105 and digestid=221001
select * from `持仓核算` where custid=129500065129 and stkcode='601607'
*/
CREATE proc `存储过程`(
 @serverid  char(1)      
,@bizdate   int          
,@sno       int
,@custid    bigint    
,@msg       varchar(128) =null output
)
with encryption
as
declare @orgid as varchar(4), @fundid as bigint, @digestid as int, @market as char(1), @stkcode as varchar(10), 
        @stkeffect as numeric(20,2), @matchqty as numeric(20,2), @matchamt as numeric(20,2), @bankcode as varchar(4), 
        @moneytype as char(1), @fundeffect as numeric(20,2), @fee_sxf as numeric(20,2), 
        @fee_jsxf as numeric(20,2), @fee_ghf as numeric(20,2), @fee_yhs as numeric(20,2), @qtfee as numeric(20,2), 
        @ordersno as bigint, @orderdate as int, @sett_status as char(1)
declare @tx_stkcost as numeric(20,2), @syvalue_ch as numeric(20,2), @stkcost_ch as numeric(20,2), 
        @rowcount as int, @ret as int
        
 select @orgid=orgid, @fundid=fundid, @digestid=busintype, @market=market, @stkcode=stkcode, 
        @stkeffect=stkeffect, @matchqty=matchqty, @fundeffect=fundeffect, @matchamt=matchamt, 
        @fee_sxf=fee_sxf, @fee_jsxf=fee_jsxf, @fee_ghf=fee_ghf, @fee_yhs=fee_yhs, @qtfee=feefront, 
        @bankcode=bankcode, @moneytype=moneytype, @ordersno=ordersno, @orderdate=orderdate,
        @sett_status=sett_status
   from `业务流水` with (nolock, index=`业务流水索引`)
  where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid and 
        busintype in (`业务摘要`) -- `业务名称`

begin try
    if (@sett_status is null)
       begin
          select @msg='该笔流水不存在或调用错误.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@sett_status ='3')
       begin
          select @msg='该笔流水已处理.'
          return 0
       end

    if (@fundeffect<=0)
       begin
          select @msg='资金发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@stkeffect>=0)
       begin
          select @msg='股票发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@fee_sxf<@fee_jsxf or @fee_ghf<0 or @fee_yhs<0 or @qtfee<0)
       begin
          select @msg='费用金额异常.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@matchamt-@fee_sxf-@fee_ghf-@fee_yhs-@qtfee-@fundeffect!=0)
       begin
          select @msg='资金发生不等于成交金额减费用.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

begin tran  
   select @tx_stkcost=case when stkqty=abs(@stkeffect) then stkcost else convert(numeric(20,2),stkcost/stkqty*abs(@stkeffect)) end
     from `持仓核算` with (nolock, index=`持仓核算索引`)
    where stkcode=@stkcode and market=@market and fundid=@fundid and custid=@custid and orgid=@orgid and 
          ltlx='`流通类型`' and stkqty>=abs(@stkeffect) and serverid=@serverid

       if (@tx_stkcost is null)               
          begin
             select @msg='客户卖出持仓不足.'
             raiserror(' %s', 12, 1, @msg) with SETERROR
          end

    select @syvalue_ch=@matchamt-@tx_stkcost, @stkcost_ch=-@tx_stkcost
    exec @ret=nb_Cust_Stkasset_Commit 
             @serverid=@serverid, @orgid=@orgid, @custid=@custid, @fundid=@fundid, @moneytype=@moneytype, @bankcode=@bankcode, 
             @action='`动作类型`', @market=@market, @stkcode=@stkcode, @ltlx='`流通类型`', @matchqty=@matchqty, 
             @matchamt=@matchamt, @matchamt_ex=0, @aiamount=0, @fundeffect=@fundeffect, @stkeffect=@stkeffect, 
             @stkcost_ch=@stkcost_ch, @syvalue_ch=@syvalue_ch, @aicost_ch=0, @lxsr_ch=0, 
             @sxf=@fee_sxf, @jsxf=@fee_jsxf, @yhs=@fee_yhs, @ghf=@fee_ghf, @qtfee=@qtfee, 
             @blje=0, @blxx='', @msg=@msg output
             
     if (@ret!=0)   
         begin
            raiserror(' %s', 12, 1, @msg) with SETERROR
         end
             
      select @msg='核算处理成功'
      update `业务流水`
         set sett_status=3, sett_remark=@msg
       where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid

      commit tran
      return 0
end try
begin catch
   if @@trancount>0
       rollback tran

   select @msg='失败:'+error_message()+''
   update `业务流水`
      set sett_status=4, sett_remark=@msg
    where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid
    
   return -1
end catch
go

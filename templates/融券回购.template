/****************************************
    存储过程：    `存储过程`
    业务描述：    `业务名称`（`业务摘要`）
*****************************************/

if exists (select * from sysobjects where type='P' and name='`存储过程`')
    drop proc `存储过程`
go
/*
select top 10 * from `业务流水` where busintype=`业务摘要`
update `业务流水` set sett_status=0, sett_remark='' where busintype=`业务摘要`

declare @ret as int, @msg as varchar(128)
exec @ret=`存储过程`  '1',20151207, 18689, 120199995234, @msg output
select @ret, @msg

select * from `持仓核算`
select * from `资金核算`
*/
CREATE proc `存储过程`(
 @serverid  char(1)
,@bizdate   int
,@sno       int
,@custid    bigint
,@msg       varchar(128)=null output
)
-- with encryption
as
declare @orgid as varchar(4), @fundid as bigint, @busintype as int, @market as char(1), @stkcode as varchar(10), 
        @stkeffect as numeric(20,2), @matchqty as numeric(20,2), @matchamt as numeric(20,2), @bankcode as varchar(4), 
        @moneytype as char(1), @fundeffect as numeric(20,2), @fee_sxf as numeric(20,2),@fee_jsxf as numeric(20,2),
        @fee_ghf as numeric(20,2), @fee_yhs as numeric(20,2), @qtfee as numeric(20,2),
        @ordersno as bigint, @orderdate as int, @sett_status as char(1), @rowcount as int, @ret as int
        
 select @orgid=orgid, @fundid=fundid, @busintype=busintype, @market=market, @stkcode=stkcode, 
        @stkeffect=stkeffect, @matchqty=matchqty, @fundeffect=fundeffect, @matchamt=matchamt, 
        @fee_sxf=fee_sxf, @fee_jsxf=fee_jsxf, @fee_ghf=fee_ghf, @fee_yhs=fee_yhs,
        @qtfee=fee_qsf+fee_jygf+fee_jsf+fee_zgf+fee_qtf+feefront,
        @bankcode=bankcode, @moneytype=moneytype, @ordersno=ordersno, @orderdate=orderdate,
        @sett_status=sett_status
   from `业务流水` with (nolock, index=logasset_hs_pk)
  where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid and busintype=`业务摘要` -- `业务名称`

begin try
    if (@sett_status is null)
       begin
          select @msg='该笔流水不存在或调用错误.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@sett_status='3')
       begin
          select @msg='该笔流水已处理.'
          return 0
       end

`校验处理`    

begin tran
    update `持仓核算`
       set stkbuyqty=stkbuyqty+@matchqty, stkbuyamt=stkbuyamt+@matchamt,
           stkqty=stkqty+@matchqty, stkqty_ch=stkqty_ch+@matchqty,
           stkcost=stkcost+@matchamt, stkcost_ch=stkcost_ch+@matchamt,
           jsxf=jsxf+@fee_jsxf, jsxf_ch=jsxf_ch+@fee_jsxf,sxf=sxf+@fee_sxf, sxf_ch=sxf_ch+@fee_sxf,
           ghf=ghf+@fee_ghf, ghf_ch=ghf_ch+@fee_ghf, yhs=yhs+@fee_yhs, yhs_ch=yhs_ch+@fee_yhs,
           qtfee=qtfee+@qtfee, qtfee_ch=qtfee_ch+@qtfee
     where stkcode=@stkcode and market=@market and custid=@custid and orgid=@orgid and
           serverid=@serverid and fundid=@fundid and ltlx='`流通类型`'

    select @rowcount=@@rowcount
    if (@rowcount>1)    
       begin
          select @msg='更新证券持仓行数错误(rowcount='+CONVERT(varchar, @rowcount)+').'       
          raiserror(' %s', 12, 2, @msg) with SETERROR                   
       end
       else if (@rowcount=0)
       begin
          insert `持仓核算`
                 (serverid, orgid, custid, fundid, market, stkcode, ltlx, stkbuyqty,
                 stkbuyamt, stksaleqty, stksaleamt, stkbuyqty_ex, stkbuyamt_ex,
                 stksaleqty_ex, stksaleamt_ex, stkztgrqty, stkztgramt, stkztgcqty,
                 stkztgcamt, stkhgqty, stkhlamt, stkpgqty, stkpgamt, stkqty,
                 stkqty_ch, stkqty_tz, stkqty_tzje, stkpledge, stkdebt, stkdebt_ch,
                 stkloan, stkloan_ch, stkadjust, stkadjust_ch, stkprice, bondintr,
                 mktvalue, aiamount, stkcost, stkcost_ch, aicost, aicost_ch, syvalue,
                 syvalue_ch, lxsr, lxsr_ch, gyvalue, gyvalue_ch, lxjt, lxjt_ch, cjsr,
                 cjsr_ch, jrzc, jrzc_ch, sxf, sxf_ch, jsxf, jsxf_ch, yhs, yhs_ch, lxs,
                 lxs_ch, ghf, ghf_ch, qtfee, qtfee_ch, jtdate, gydate, remark,
                 stkpledge_ch, yearqty, yeargyvalue, yearlxjt)
          select serverid=@serverid, orgid=@orgid, custid=@custid,
                 fundid=@fundid, market=@market, stkcode=@stkcode, ltlx='`流通类型`',
                 stkbuyqty=@matchqty, stkbuyamt=@matchamt, stksaleqty=0, stksaleamt=0, stkbuyqty_ex=0,
                 stkbuyamt_ex=0, stksaleqty_ex=0, stksaleamt_ex=0, stkztgrqty=0,
                 stkztgramt=0, stkztgcqty=0, stkztgcamt=0, stkhgqty=0, stkhlamt=0,
                 stkpgqty=0, stkpgamt=0, stkqty=@matchqty,
                 stkqty_ch=@matchqty, stkqty_tz=0, stkqty_tzje=0,
                 stkpledge=0, stkdebt=0, stkdebt_ch=0, stkloan=0, stkloan_ch=0,
                 stkadjust=0, stkadjust_ch=0, stkprice=0, bondintr=0, mktvalue=0,
                 aiamount=0, stkcost=@matchamt, stkcost_ch=@matchamt, aicost=0, aicost_ch=0,
                 syvalue=0, syvalue_ch=0, lxsr=0, lxsr_ch=0, gyvalue=0, gyvalue_ch=0,
                 lxjt=0, lxjt_ch=0, cjsr=0, cjsr_ch=0, jrzc=0, jrzc_ch=0,
                 sxf=@fee_sxf, sxf_ch=@fee_sxf, jsxf=@fee_jsxf, jsxf_ch=@fee_jsxf,
                 yhs=@fee_yhs, yhs_ch=@fee_yhs, lxs=0, lxs_ch=0, ghf=@fee_ghf, ghf_ch=@fee_ghf,
                 qtfee=@qtfee, qtfee_ch=@qtfee, jtdate=0, gydate=0, remark='',
                 stkpledge_ch=0, yearqty=0, yeargyvalue=0, yearlxjt=0                 
       end

    update `资金核算`
       set fundbal=fundbal+@fundeffect, fundbal_ch=fundbal_ch+@fundeffect,
           fundloan=fundloan+@matchamt, fundloan_ch=fundloan_ch+@matchamt           
     where fundid=@fundid and custid=@custid and orgid=@orgid and serverid=@serverid and
           moneytype=@moneytype              
           
    select @rowcount=@@rowcount
    if (@rowcount>1)    
       begin
          select @msg='更新资金行数错误(rowcount='+CONVERT(varchar, @rowcount)+').'       
          raiserror(' %s', 12, 2, @msg) with SETERROR                   
       end
       else if (@rowcount=0)
       begin
          insert `资金核算`
                  (serverid, orgid, custid, fundid, moneytype, bankcode, fundbal, fundbal_ch,
                  fundsave, fundsave_ch, fundunsave, fundunsave_ch, fundloan, fundloan_ch, funddebt, funddebt_ch,
                  funduncome, funduncome_ch, fundunpay, fundunpay_ch, fundintr, fundintr_ch, fundaward, fundaward_ch,
                  fundadjust, fundadjust_ch, fundlastbal, totalvalue, tjdate, remark, nav, mktvalue, totalfe, rzlx,
                  rzlx_ch)
           select serverid=@serverid, orgid=@orgid, custid=@custid, fundid=@fundid,
                  moneytype=@moneytype, bankcode=@bankcode, fundbal=@fundeffect, fundbal_ch=@fundeffect, fundsave=0,
                  fundsave_ch=0, fundunsave=0, fundunsave_ch=0, fundloan=@matchamt, fundloan_ch=@matchamt, funddebt=0, funddebt_ch=0,
                  funduncome=0, funduncome_ch=0, fundunpay=0, fundunpay_ch=0, fundintr=0, fundintr_ch=0, fundaward=0,
                  fundaward_ch=0, fundadjust=0, fundadjust_ch=0, fundlastbal=0, totalvalue=0, tjdate=0, remark='',
                  nav=0, mktvalue=0, totalfe=0, rzlx=0, rzlx_ch=0
       end
             
      select @msg='`业务名称`核算处理成功'
      update `业务流水` 
         set sett_status=3, sett_remark=@msg
       where sno=@sno and bizdate=@bizdate and serverid=@serverid

      commit tran
      return 0
end try
begin catch
   if @@trancount>0
       rollback tran

   select @msg='`业务名称`失败: '+error_message()+''
   update `业务流水`
      set sett_status=4, sett_remark=@msg
    where sno=@sno and bizdate=@bizdate and serverid=@serverid
    
   return -1
end catch
go

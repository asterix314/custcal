/****************************************
    存储过程：    `存储过程`
    业务描述：    `业务名称`（`业务摘要`）
*****************************************/

if exists (select * from sysobjects where type='P' and name='`存储过程`')
    drop proc `存储过程`
go
/*
select top 10 * from `业务流水` where busintype=`业务摘要`
update `业务流水` set sett_status=0, sett_remark='' where busintype=`业务摘要`

select * from gp_cqcx

declare @ret as int, @msg as varchar(128)
exec @ret=`存储过程` '1', 20151103, 68853, 120100154708, @msg output
select @ret, @msg

select * from `持仓核算`
select * from `资金核算`
*/
CREATE proc `存储过程`(
 @serverid  char(1)      
,@bizdate   int          
,@sno       int
,@custid    bigint    
,@msg       varchar(128)=null output
)
-- with encryption
as
declare @orgid as varchar(4), @fundid as bigint, @market as char(1), @stkcode as varchar(10), 
        @stkeffect as numeric(20,2), @matchqty as numeric(20,2), @matchamt as numeric(20,2), @bankcode as varchar(4),
        @fee_sxf as numeric(20,2), @fee_jsxf as numeric(20,2), @fee_ghf as numeric(20,2), @fee_yhs as numeric(20,2),
        @qtfee as numeric(20,2), @matchprice as numeric(20,2), @moneytype as char(1), @fundeffect as numeric(20,2)
declare @reduceby as numeric(12,5), @syvalue_ch as numeric(20,2), @tx_stkcost as numeric(20,2), @lxsr_ch as numeric(20,2),
        @stkqty as numeric(20,2), @stkqty_ch as numeric(20,2), @rowcount as int, @ret as int, @sett_status as char(1)
        
 select @orgid=orgid, @fundid=fundid, @market=market, @stkcode=stkcode, 
        @stkeffect=stkeffect, @matchqty=matchqty, @fundeffect=fundeffect, @matchamt=matchamt,
        @fee_sxf=fee_sxf, @fee_jsxf=fee_jsxf, @fee_ghf=fee_ghf, @fee_yhs=fee_yhs,
        @qtfee=fee_qsf+fee_jygf+fee_jsf+fee_zgf+fee_qtf+feefront, 
        @matchprice=matchprice, @bankcode=bankcode, @moneytype=moneytype, @sett_status=sett_status
   from `业务流水` with (nolock, index=logasset_hs_pk)
  where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid and busintype=`业务摘要` -- `业务名称`   

begin try
    if (@sett_status is null)
       begin
          select @msg='该笔流水不存在或调用错误.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@sett_status='3')
       begin
          select @msg='该笔流水已处理.'
          return 0
       end

    if (@fundeffect<=0)
       begin
          select @msg='资金发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@matchqty>0 and @stkeffect>=0)
       begin
          select @msg='股票发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end
       
    if (@matchqty>0 and @matchprice!=100)
       begin
          select @msg='还本面值不是100.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end       
       
    if (@fee_sxf!=0 or @fee_jsxf!=0 or @fee_ghf!=0 or @fee_yhs!=0 or @qtfee!=0)
       begin
          select @msg='费用金额异常.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@matchqty=0) -- 降低票面价格
       begin
          select @reduceby=sl1 -- 本金递减率
            from gp_cqcx
           where stkcode=@stkcode and market=@market and xqr=@bizdate and cqcx='ZQDF'
           
           if (@reduceby is null)
              begin
                 select @msg='查询不到本金递减率(gp_cqcx.sl1 where cqcx="ZQDF").'
                 raiserror(' %s', 12, 1, @msg) with SETERROR
              end
       end

    select @tx_stkcost=case when (@matchqty=0)
              then (stkcost*@reduceby)                 -- 降低票面
              else (stkcost*@matchqty/stkqty) end,     -- 减少持仓
           @lxsr_ch=case when (@matchqty=0)
              then (@matchamt-100*stkqty*@reduceby)    -- 降低票面
              else (@matchamt-100*@matchqty) end       -- 减少持仓              
      from `持仓核算` with (nolock, index=stkasset_hs_pk)
     where stkcode=@stkcode and market=@market and fundid=@fundid and custid=@custid and orgid=@orgid and
           stkqty>=@matchqty+stkpledge and serverid=@serverid  and ltlx='`流通类型`'

    if (@tx_stkcost is null)
       begin
          select @msg='客户可用持仓不足.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

begin tran
    select @syvalue_ch=@matchamt-@tx_stkcost-@lxsr_ch
    
    update `持仓核算`
       set stksaleqty_ex=stksaleqty_ex+@matchqty, stksaleamt_ex=stksaleamt_ex+@matchamt,
           stkqty=stkqty-@matchqty, stkqty_ch=stkqty_ch-@matchqty,
           stkcost=stkcost-@tx_stkcost, stkcost_ch=stkcost_ch-@tx_stkcost,
           syvalue=syvalue+@syvalue_ch, syvalue_ch=syvalue_ch+@syvalue_ch,
           lxsr=lxsr+@lxsr_ch, lxsr_ch=lxsr_ch+@lxsr_ch,
           mktvalue=mktvalue-@tx_stkcost
     where stkcode=@stkcode and market=@market and custid=@custid and orgid=@orgid and
           serverid=@serverid and fundid=@fundid and ltlx='`流通类型`' and stkqty>=@matchqty+stkpledge

    select @rowcount=@@rowcount
       if (@rowcount!=1)
           begin
              if (@@TRANCOUNT>0)
                  rollback tran
                 
              select @msg='债券可用持仓不足或更新持仓错误(rowcount='+CONVERT(varchar, @rowcount)+').'
              raiserror(' %s', 12, 1, @msg) with SETERROR
           end

    update `资金核算`
       set fundbal=fundbal+@fundeffect, fundbal_ch=fundbal_ch+@fundeffect
     where fundid=@fundid and custid=@custid and orgid=@orgid and serverid=@serverid and
           moneytype=@moneytype   
           
    select @rowcount=@@rowcount
    if (@rowcount>1)    
       begin
          select @msg='更新资金行数错误(rowcount='+CONVERT(varchar, @rowcount)+').'       
          raiserror(' %s', 12, 2, @msg) with SETERROR                   
       end
       else if (@rowcount=0)
       begin
          insert `资金核算`
                  (serverid, orgid, custid, fundid, moneytype,
                  bankcode, fundbal, fundbal_ch, fundsave, fundsave_ch, fundunsave,
                  fundunsave_ch, fundloan, fundloan_ch, funddebt, funddebt_ch,
                  funduncome, funduncome_ch, fundunpay, fundunpay_ch, fundintr,
                  fundintr_ch, fundaward, fundaward_ch, fundadjust, fundadjust_ch,
                  fundlastbal, totalvalue, tjdate, remark, nav, mktvalue, totalfe,
                  rzlx, rzlx_ch)
           select serverid=@serverid, orgid=@orgid, custid=@custid,
                  fundid=@fundid, moneytype=@moneytype, bankcode=@bankcode,
                  fundbal=@fundeffect, fundbal_ch=@fundeffect, fundsave=0,
                  fundsave_ch=0, fundunsave=0, fundunsave_ch=0, fundloan=0,
                  fundloan_ch=0, funddebt=0, funddebt_ch=0, funduncome=0,
                  funduncome_ch=0, fundunpay=0, fundunpay_ch=0, fundintr=0,
                  fundintr_ch=0, fundaward=0, fundaward_ch=0, fundadjust=0,
                  fundadjust_ch=0, fundlastbal=0, totalvalue=0, tjdate=0, remark='',
                  nav=0, mktvalue=0, totalfe=0, rzlx=0, rzlx_ch=0
       end

      select @msg='`业务名称`核算处理成功'
      update `业务流水`
         set sett_status=3, sett_remark=@msg
       where sno=@sno and bizdate=@bizdate and serverid=@serverid
   
   commit tran
   return 0

end try
begin catch
   if @@trancount>0
       rollback tran

   select @msg='`业务名称`失败: '+error_message()+''
   update `业务流水`
      set sett_status=4, sett_remark=@msg
    where sno=@sno and bizdate=@bizdate and serverid=@serverid
    
   return -1
end catch
go

/****************************************
    存储过程：    `存储过程`
    业务描述：    `业务名称`（`业务摘要`）
*****************************************/

if exists (select * from sysobjects where type='P' and name='`存储过程`')
    drop proc `存储过程`
go
/*
select * from `业务流水` where bizdate<20150106
select * from `业务流水` where sno=251110 and bizdate=20150130
select * from `业务流水` where sno=278249 and bizdate=20150105
select * from `业务流水` where custid=129500065129 and bizdate=20150105 and digestid=`业务摘要`
declare @msg as varchar(128)
exec `存储过程` @serverid=1, @bizdate=20150105, @sno=148741, @custid=129500065129, @msg=@msg output
select @msg

select * from `业务流水` where custid=129500065129 and bizdate=20150105 and digestid=221001
select * from `持仓核算` where custid=129500065129 and stkcode='601607'
*/
CREATE proc `存储过程`(
 @serverid  char(1)      
,@bizdate   int          
,@sno       int
,@custid    bigint    
,@msg       varchar(128)=null output
)
-- with encryption
as
declare @orgid as varchar(4), @fundid as bigint, @digestid as int, @market as char(1), @stkcode as varchar(10),
        @stkeffect as numeric(20,2), @matchqty as numeric(20,2), @matchamt as numeric(20,2), @bankcode as varchar(4), 
        @moneytype as char(1), @fundeffect as numeric(20,2), @fee_sxf as numeric(20,2), @stkqty as numeric(20,2),
        @stkqty_ch as numeric(20,2), @fee_jsxf as numeric(20,2), @fee_ghf as numeric(20,2), @fee_yhs as numeric(20,2),
        @qtfee as numeric(20,2), @ordersno as bigint, @orderdate as int, @sett_status as char(1)
declare @tx_stkcost as numeric(20,2), @syvalue_ch as numeric(20,2), @stkcost_ch as numeric(20,2), 
        @rowcount as int, @ret as int
        
 select @orgid=orgid, @fundid=fundid, @digestid=digestid, @market=market, @stkcode=stkcode, 
        @stkeffect=stkeffect, @matchqty=matchqty, @fundeffect=fundeffect, @matchamt=matchamt, 
        @fee_sxf=fee_sxf, @fee_jsxf=fee_jsxf, @fee_ghf=fee_ghf, @fee_yhs=fee_yhs,
        @qtfee=fee_qsf+fee_jygf+fee_jsf+fee_zgf+fee_qtf+feefront, 
        @bankcode=bankcode, @moneytype=moneytype, @ordersno=ordersno, @orderdate=orderdate,
        @sett_status=sett_status
   from `业务流水` with (nolock, index=logasset_hs_pk)
  where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid and digestid=`业务摘要` -- `业务名称`
           
begin try
    if (@sett_status is null)
       begin
          select @msg='该笔流水不存在或调用错误.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@sett_status='3')
       begin
          select @msg='该笔流水已处理.'
          return 0
       end
   if (@fundeffect<=0)
       begin
          select @msg='资金发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@matchqty<=0)  -- stkeffect=0
       begin
          select @msg='股票发生与该业务不符.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@fee_sxf<@fee_jsxf or @fee_sxf<0 or @fee_ghf<0 or @fee_yhs<0 or @qtfee<0)
       begin
          select @msg='费用金额异常.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@matchamt+@fee_sxf+@fee_ghf+@fee_yhs+@qtfee!=@fundeffect)
       begin
          select @msg='资金发生,成交金额,费用关系不平.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end
       
    -- tx_stkcost: 成本计减值
    select @tx_stkcost=stkcost*@matchqty/stkqty, @stkqty=stkqty
      from `持仓核算` with (nolock, index=stkasset_hs_pk)
      where stkcode=@stkcode and market=@market and fundid=@fundid and custid=@custid and orgid=@orgid and
            stkqty>=@matchqty and serverid=@serverid  and ltlx='`流通类型`' -- 主键

    if (@tx_stkcost is null)
       begin
          select @msg='客户持仓不足.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

begin tran
    select @syvalue_ch=@matchamt-@tx_stkcost, @stkcost_ch=-@tx_stkcost
    
    -- 价差收益放入利息收入
    update `持仓核算`
       set lxsr=lxsr+@syvalue_ch, lxsr_ch=lxsr_ch+@syvalue_ch,
           stkcost=stkcost+@stkcost_ch, stkcost_ch=stkcost_ch+@stkcost_ch,
           stkqty=stkqty-@matchqty, stkqty_ch=stkqty_ch-@matchqty,
           jsxf=jsxf+@fee_jsxf, jsxf_ch=jsxf_ch+@fee_jsxf,
           sxf=sxf+@fee_sxf, sxf_ch=sxf_ch+@fee_sxf,
           ghf=ghf+@fee_ghf, ghf_ch=ghf_ch+@fee_ghf, 
           qtfee=qtfee+@qtfee, qtfee_ch=qtfee_ch+@qtfee
     where stkcode=@stkcode and market=@market and custid=@custid and orgid=@orgid and
           serverid=@serverid and fundid=@fundid and ltlx='`流通类型`' and stkqty-@matchqty>=0

   select @rowcount=@@rowcount
       if (@rowcount!=1)
           begin
              if (@@TRANCOUNT>0)
                  rollback tran
                 
              select @msg='卖出持仓不足或更新持仓错误(rowcount='+CONVERT(varchar, @rowcount)+').'
              raiserror(' %s', 12, 1, @msg) with SETERROR
           end
      
    update `资金核算`
       set fundbal=fundbal+@fundeffect, fundbal_ch=fundbal_ch+@fundeffect,
           fundloan=fundloan+@stkcost_ch, fundloan_ch=fundloan_ch+@stkcost_ch
     where fundid=@fundid and custid=@custid and orgid=@orgid and serverid=@serverid and
           moneytype=@moneytype and fundloan>=@tx_stkcost -- 保证fundloan不至减成负数

   select @rowcount=@@ROWCOUNT
       if (@rowcount>1)
           begin
              select @msg='更新资金记录条数错误(rowcount='+CONVERT(varchar, @rowcount)+').'
              raiserror(' %s', 12, 1, @msg) with SETERROR
           end
        else if (@rowcount=0)
           begin
              insert `资金核算`(serverid, orgid, custid, fundid, moneytype, fundlastbal, fundbal, fundbal_ch, 
                     fundsave, fundsave_ch, fundunsave, fundunsave_ch, fundloan, fundloan_ch, funddebt, funddebt_ch, 
                     funduncome, funduncome_ch, fundunpay, fundunpay_ch, fundadjust, fundadjust_ch, fundintr, fundintr_ch, 
                     fundaward, fundaward_ch, rzlx, rzlx_ch, bankcode, mktvalue, totalvalue, totalfe, nav, tjdate, remark)
              select @serverid, @orgid, @custid, @fundid, @moneytype, fundlastbal=0, fundbal=@fundeffect, fundbal_ch=@fundeffect, 
                     fundsave=0, fundsave_ch=0, fundunsave=0, fundunsave_ch=0, fundloan=@stkcost_ch, fundloan_ch=@stkcost_ch,
                     funddebt=0, funddebt_ch=0, funduncome=0, funduncome_ch=0, fundunpay=0, fundunpay_ch=0, fundadjust=0,
                     fundadjust_ch=0, fundintr=0, fundintr_ch=0,fundaward=0, fundaward_ch=0, rzlx=0, rzlx_ch=0, bankcode=@bankcode,
                     mktvalue=0, totalvalue=0, totalfe=0, nav=0, tjdate=0, remark=''
           end

      select @msg='核算处理成功'
      update `业务流水`
         set sett_status=3, sett_remark=@msg
       where sno=@sno and bizdate=@bizdate and serverid=@serverid

      commit tran
      return 0
end try
begin catch
   if @@trancount>0
       rollback tran

   select @msg='失败:'+error_message()+''
   update `业务流水`
      set sett_status=4, sett_remark=@msg
    where sno=@sno and bizdate=@bizdate and serverid=@serverid
    
   return -1
end catch
go

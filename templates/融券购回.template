/****************************************
    存储过程：    `存储过程`
    业务描述：    `业务名称`（`业务摘要`）
*****************************************/

if exists (select * from sysobjects where type='P' and name='`存储过程`')
    drop proc `存储过程`
go
/*
select * from logasset_hs where bizdate<20150106
select * from logasset_hs where sno=251110 and bizdate=20150130
select * from logasset_hs where sno=278249 and bizdate=20150105
select * from logasset_hs where custid=129500065129 and bizdate=20150105 and busintype=`业务摘要`
declare @msg as varchar(128)
exec `存储过程` @serverid=1, @bizdate=20150105, @sno=148741, @custid=129500065129, @msg=@msg output
select @msg

select * from logasset_hs where custid=129500065129 and bizdate=20150105 and busintype=221001
select * from stkasset_hs where custid=129500065129 and stkcode='601607'
*/
CREATE proc `存储过程`(
 @serverid  char(1)      
,@bizdate   int          
,@sno       int
,@custid    bigint    
,@msg       varchar(128)=null output
)
-- with encryption
as
declare @orgid as varchar(4), @fundid as bigint, @busintype as int, @market as char(1), @stkcode as varchar(10),
        @stkeffect as numeric(20,2), @matchqty as numeric(20,2), @matchamt as numeric(20,2), @bankcode as varchar(4), 
        @moneytype as char(1), @fundeffect as numeric(20,2), @fee_sxf as numeric(20,2), @stkqty as numeric(20,2),
        @stkqty_ch as numeric(20,2), @fee_jsxf as numeric(20,2), @fee_ghf as numeric(20,2), @fee_yhs as numeric(20,2),
        @qtfee as numeric(20,2), @ordersno as bigint, @orderdate as int, @sett_status as char(1)
declare @tx_stkcost as numeric(20,2), @syvalue_ch as numeric(20,2), @stkcost_ch as numeric(20,2), 
        @rowcount as int, @ret as int
        
 select @orgid=orgid, @fundid=fundid, @busintype=busintype, @market=market, @stkcode=stkcode, 
        @stkeffect=stkeffect, @matchqty=matchqty, @fundeffect=fundeffect, @matchamt=matchamt, 
        @fee_sxf=fee_sxf, @fee_jsxf=fee_jsxf, @fee_ghf=fee_ghf, @fee_yhs=fee_yhs,
        @qtfee=fee_qsf+fee_jygf+fee_jsf+fee_zgf+fee_qtf+feefront, 
        @bankcode=bankcode, @moneytype=moneytype, @ordersno=ordersno, @orderdate=orderdate,
        @sett_status=sett_status
   from logasset_hs with (nolock, index=logasset_hs_pk)
  where sno=@sno and bizdate=@bizdate and serverid=@serverid and custid=@custid and busintype=`业务摘要` -- `业务名称`
           
begin try
    if (@sett_status is null)
       begin
          select @msg='该笔流水不存在或调用错误.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

    if (@sett_status='3')
       begin
          select @msg='该笔流水已处理.'
          return 0
       end

`校验处理`

    -- tx_stkcost: 成本计减值
    select @tx_stkcost=stkcost*@matchqty/stkqty, @stkqty=stkqty
      from stkasset_hs with (nolock, index=stkasset_hs_pk)
      where stkcode=@stkcode and market=@market and fundid=@fundid and custid=@custid and orgid=@orgid and
            stkqty>=@matchqty and serverid=@serverid  and ltlx='`流通类型`'

    if (@tx_stkcost is null)
       begin
          select @msg='客户持仓不足.'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

begin tran
    select @syvalue_ch=@matchamt-@tx_stkcost, @stkcost_ch=-@tx_stkcost
    
    -- 价差收益放入利息收入
    update stkasset_hs
       set stksaleqty=stksaleqty+@matchqty, stksaleamt=stksaleamt+@matchamt,
           stkqty=stkqty-@matchqty, stkqty_ch=stkqty_ch-@matchqty,
           stkcost=stkcost+@stkcost_ch, stkcost_ch=stkcost_ch+@stkcost_ch,
           lxsr=lxsr+@syvalue_ch, lxsr_ch=lxsr_ch+@syvalue_ch,
           jsxf=jsxf+@fee_jsxf, jsxf_ch=jsxf_ch+@fee_jsxf, sxf=sxf+@fee_sxf, sxf_ch=sxf_ch+@fee_sxf,
           ghf=ghf+@fee_ghf, ghf_ch=ghf_ch+@fee_ghf, yhs=yhs+@fee_yhs, yhs_ch=yhs_ch+@fee_yhs,
           qtfee=qtfee+@qtfee, qtfee_ch=qtfee_ch+@qtfee
     where stkcode=@stkcode and market=@market and custid=@custid and orgid=@orgid and
           serverid=@serverid and fundid=@fundid and ltlx='`流通类型`' and stkqty>=@matchqty

   select @rowcount=@@rowcount
       if (@rowcount!=1)
           begin
              if (@@TRANCOUNT>0)
                  rollback tran
                 
              select @msg='卖出持仓不足或更新持仓错误(rowcount='+CONVERT(varchar, @rowcount)+').'
              raiserror(' %s', 12, 1, @msg) with SETERROR
           end

    update fundasset_hs
       set fundbal=fundbal+@fundeffect, fundbal_ch=fundbal_ch+@fundeffect,
           fundzqjy_ch=fundzqjy_ch+@fundeffect,       
           fundloan=fundloan+@stkcost_ch, fundloan_ch=fundloan_ch+@stkcost_ch
     where fundid=@fundid and custid=@custid and orgid=@orgid and serverid=@serverid and
           moneytype=@moneytype and fundloan>=@tx_stkcost -- 保证fundloan不至减成负数

    select @rowcount=@@rowcount
    if (@rowcount!=1)
       begin
          if (@@trancount>0)
             rollback tran
                 
          select @msg='借出金额不足或更新资金错误(rowcount='+CONVERT(varchar, @rowcount)+').'
          raiserror(' %s', 12, 1, @msg) with SETERROR
       end

      select @msg='`业务名称`核算处理成功'
      update logasset_hs
         set sett_status=3, sett_remark=@msg
       where sno=@sno and bizdate=@bizdate and serverid=@serverid

      commit tran
      return 0
end try
begin catch
   if @@trancount>0
       rollback tran

   select @msg='`业务名称`失败: '+error_message()+''
   update logasset_hs
      set sett_status=4, sett_remark=@msg
    where sno=@sno and bizdate=@bizdate and serverid=@serverid
    
   return -1
end catch
go
